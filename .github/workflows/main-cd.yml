name: Create a release on NuGet

on:
  push:
    tags:
      - "v[0-9]+\\.[0-9]+\\.[0-9]+"
      - "v[0-9]+\\.[0-9]+\\.[0-9]+-pre"

jobs:
  release-nuget:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Verify commit exists in origin/master
        shell: pwsh
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
          if (-not (git branch --remote --contains | Select-String "origin/master")) {
            throw "Tag is not on origin/master. Aborting release."
          }

      - name: Get version information from tag
        id: get_version
        shell: pwsh
        run: |
          $version = "${{ github.ref_name }}".TrimStart("v")
          echo "version_without_v=$version" >> $env:GITHUB_OUTPUT

      - name: Clean output directory
        shell: pwsh
        run: Remove-Item -Recurse -Force -ErrorAction Ignore Maui.FreakyEffects\Maui.FreakyEffects\bin\Release

      - name: Build
        run: dotnet build Maui.FreakyEffects\Maui.FreakyEffects\Maui.FreakyEffects.csproj -c Release

      - name: Pack NuGet package
        run: |
          dotnet pack Maui.FreakyEffects\Maui.FreakyEffects\Maui.FreakyEffects.csproj -c Release -p:PackageVersion=${{ steps.get_version.outputs.version_without_v }}

      - name: Push NuGet package
        shell: pwsh
        run: |
          $version = "${{ steps.get_version.outputs.version_without_v }}"
          $nupkgs = Get-ChildItem -Path 'Maui.FreakyEffects\Maui.FreakyEffects\bin\Release' -Recurse -Filter *.nupkg | Where-Object {
            $_.FullName -like "*$version*" -and $_.FullName -notlike "*.symbols.nupkg"
          }

          if ($nupkgs.Count -eq 0) {
            throw "No .nupkg file found for version $version"
          }

          if ($nupkgs.Count -gt 1) {
            Write-Host "⚠️ Found multiple .nupkg files, using the first one:"
            $nupkgs | ForEach-Object { Write-Host " - $($_.FullName)" }
          }

          dotnet nuget push $nupkgs[0].FullName -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }}
